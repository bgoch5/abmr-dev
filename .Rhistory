"PROJ_0101",
"PROJ_1011",
"PROJ_0111",
"PROJ_1110",
"PROJ_1101",
"PROJ_1111",
"CAL_1010",
"CAL_0110",
"CAL_1001",
"CAL_0101",
"CAL_1011",
"CAL_0111",
"CAL_1110",
"CAL_1101",
"CAL_1111")
finaltable=result[,5:7]
finaltable=round(finaltable,2)
finaltable
setwd("~/")
library(rgdal)
ndvi_raster=stack("C:/Users/BGOCHANOUR/Documents/move-model old stuff/Input_Data/NDVI_2013.gri")
NOAM=readOGR(dsn="C:/Users/BGOCHANOUR/Documents/move-model old stuff/Input_Data",layer="NOAM")
species <- setClass("species", slots=c(x="numeric", y="numeric",
morphpar1="numeric", morphpar1mean="numeric",
morphpar1sd="numeric",morphpar1sign="character",
morphpar2="numeric", morphpar2mean="numeric",
morphpar2sd="numeric",morphpar2sign="character"))
pabu.pop = species(x=-98.7, y=34.7,
morphpar1=15, morphpar1mean=16, morphpar1sd=2,morphpar1sign="Pos",
morphpar2=19,morphpar2mean=18,morphpar2sd=1,morphpar2sign="Pos")
species <- setClass("species", slots=c(x="numeric", y="numeric", morphpar1="numeric", morphpar1mean="numeric",
morphpar1sd="numeric",morphpar1sign="character",
morphpar2="numeric",
morphpar2mean="numeric",
morphpar2sd="numeric",morphpar2sign="character"))
my_species=species(x=-98.7,y=34.7)
pabu.pop=species(x=-98.7,y=34.7)
t.move=moveSIM(replicates=20,days=27,env_rast=ndvi_raster, search_radius=700,
sigma=0.2, dest_x=-108.6, dest_y=26.2, mot_x=0.9, mot_y=0.9,
modeled_species=my_species, optimum = 0.7,
direction="S",write_results=F, single_rast=F)
library(abmR)
library(raster)
t.move=moveSIM(replicates=20,days=27,env_rast=ndvi_raster, search_radius=700,
sigma=0.2, dest_x=-108.6, dest_y=26.2, mot_x=0.9, mot_y=0.9,
modeled_species=my_species, optimum = 0.7,
direction="S",write_results=F, single_rast=F)
library(abmR)
library(raster)
library(rgdal)
ndvi_raster=stack("C:/Users/BGOCHANOUR/Documents/move-model old stuff/Input_Data/NDVI_2013.gri")
NOAM=readOGR(dsn="C:/Users/BGOCHANOUR/Documents/move-model old stuff/Input_Data",layer="NOAM")
species <- setClass("species", slots=c(x="numeric", y="numeric",
morphpar1="numeric", morphpar1mean="numeric",
morphpar1sd="numeric",morphpar1sign="character",
morphpar2="numeric", morphpar2mean="numeric",
morphpar2sd="numeric",morphpar2sign="character"))
pabu.pop = species(x=-98.7, y=34.7,
morphpar1=15, morphpar1mean=16, morphpar1sd=2,morphpar1sign="Pos",
morphpar2=19,morphpar2mean=18,morphpar2sd=1,morphpar2sign="Pos")
species <- setClass("species", slots=c(x="numeric", y="numeric", morphpar1="numeric", morphpar1mean="numeric",
morphpar1sd="numeric",morphpar1sign="character",
morphpar2="numeric",
morphpar2mean="numeric",
morphpar2sd="numeric",morphpar2sign="character"))
my_species=species(x=-98.7,y=34.7)
pabu.pop=species(x=-98.7,y=34.7)
t.move=moveSIM(replicates=20,days=27,env_rast=ndvi_raster, search_radius=700,
sigma=0.2, dest_x=-108.6, dest_y=26.2, mot_x=0.9, mot_y=0.9,
modeled_species=my_species, optimum = 0.7,
direction="S",write_results=F, single_rast=F)
t.move=moveSIM(replicates=5,days=27,env_rast=ndvi_raster, search_radius=700,
sigma=0.2, dest_x=-108.6, dest_y=26.2, mot_x=0.9, mot_y=0.9,
modeled_species=my_species, optimum = 0.7,
direction="S",write_results=F, single_rast=F)
library(dplyr)
my_result=t.move$results
my_result
my_result %>%
group_by(agent_id) %>%
mutate(
last = dplyr::last(na.omit(value)))
my_result %>%
group_by(agent_id) %>%
mutate(
last = dplyr::last(na.omit(curr_status)))
my_result %>%
group_by(agent_id) %>%
mutate(
last = dplyr::last(na.omit(lon))
test=my_result %>%
my_result %>%
group_by(agent_id) %>%
mutate(
last = dplyr::last(na.omit(lon)))
my_result %>%
mutate(rn = row_number()) %>%
group_by(agent_id) %>%
summarise(first = first(rn[is.na(lon)]))
my_result %>%
group_by(agent_id) %>%
summarise(first = first(day[is.na(lon)]))
my_result
my_result %>%
group_by(agent_id) %>%
summarise(first = first(day[is.na(lon)]))
my_result
data = my_result %>%
group_by(agent_id) %>%
summarise(agent_id=agent_id, lon=lon,lat=lat,first = first(day[is.na(lon)]))
data = my_result %>%
group_by(agent_id) %>%
summarise(lon=lon,lat=lat,first = first(day[is.na(lon)]))
data = my_result %>%
group_by(agent_id) %>%
summarise(lon=lon,lat=lat,first = first(day[is.na(lon)]))
data = my_result %>%
mutate(rn = row_number()) %>%
group_by(agent_id) %>%
summarise(last = first(rn[is.na(lon)]))
indices = my_result %>%
mutate(rn = row_number()) %>%
group_by(agent_id) %>%
summarise(first = first(rn[is.na(lon)]))
indices
indices = my_result %>%
mutate(rn = row_number()) %>%
group_by(agent_id) %>%
summarise(index = first(rn[is.na(lon)]))[,2]
indices = my_result %>%
mutate(rn = row_number()) %>%
group_by(agent_id) %>%
summarise(index = first(rn[is.na(lon)]))
indices[,2]
my_result=my_result[indices[,2],]
my_result=my_result[list(indices[,2]),]
indices=indices$index
my_result=my_result[index,]
indices = my_result %>%
mutate(rn = row_number()) %>%
group_by(agent_id) %>%
summarise(index = first(rn[is.na(lon)]))
indices=indices$index
my_result=my_result[indices,]
my_result
indices2=indices-1
indices = my_result %>%
mutate(rn = row_number()) %>%
group_by(agent_id) %>%
summarise(index = first(rn[is.na(lon)]))
indices=indices$index
indices2=indices-1
first_na=my_result[indices,]
first_non_na=my_result[indices2,]
first_na
last_non_na=my_result[indices2,]
last_non_na
indices = my_result %>%
mutate(rn = row_number()) %>%
group_by(agent_id) %>%
summarise(index = first(rn[is.na(lon)]))
indices=indices$index
indices2=indices-1
first_na=my_result[indices,]
last_non_na=my_result[indices2,]
indices2
indices
indices = my_result %>%
mutate(rn = row_number()) %>%
group_by(agent_id) %>%
summarise(index = first(rn[is.na(lon)]))
indices
my_result=t.move$results
my_result=t.move$results
indices = my_result %>%
mutate(rn = row_number()) %>%
group_by(agent_id) %>%
summarise(index = first(rn[is.na(lon)]))
indices
indices=indices$index
indices2=indices-1
first_na=my_result[indices,]
last_non_na=my_result[indices2,]
indices
first_na
last_non_na
library(abmR)
library(abmR)
library(methods)
library(abmR)
library(abmR)
library(abmR)
library(abmR)
library(abmR)
library(abmR)
install.package("inputenc")
library(abmR)
library(abmR)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",warning=FALSE,message=FALSE
)
ndvi_raster_EU=stack("C:/Users/BGOCHANOUR/Documents/move-model old stuff/Input_Data/NDVI_2013.gri")
setwd("~/New Chen Paper/Final Simulation Codes/Simulation/Dirchelete Update")
library(pbapply)
load("Dat")
source("function.R")
source("function_2.R")
theta0=60
my_PROJ_chunk1=pbapply(Dat[,,1:100],3,fgammaPROJ)
my_CAL_chunk1=pbapply(Dat[,,1:100],3,fgammaCAL)
save(my_PROJ_chunk1,my_CAL_chunk1,file="Chunk1.RData")
setwd("~/New Chen Paper/Final Simulation Codes/Simulation/Dirchelete Update")
library(pbapply)
library(rBeta2009)
load("Dat")
source("function.R")
source("function_2.R")
theta0=60
my_PROJ_chunk1=pbapply(Dat[,,1:100],3,fgammaPROJ)
my_CAL_chunk1=pbapply(Dat[,,1:100],3,fgammaCAL)
save(my_PROJ_chunk1,my_CAL_chunk1,file="Chunk1.RData")
load("Dat")
source("function.R")
source("function_2.R")
theta0=60
my_PROJ_chunk1=pbapply(Dat[,,1:100],3,fgammaPROJ)
my_CAL_chunk1=pbapply(Dat[,,1:100],3,fgammaCAL)
save(my_PROJ_chunk1,my_CAL_chunk1,file="Chunk1.RData")
setwd("~/New Chen Paper/Final Simulation Codes/Simulation/Dirchelete Update")
my_CAL=cbind(my_CAL_chunk1,my_CAL_chunk2,my_CAL_chunk3,my_CAL_chunk4,
my_CAL_chunk5)
#,my_CAL_chunk6,my_CAL_chunk7,my_CAL_chunk8,
#my_CAL_chunk9,my_CAL_chunk10)
m<-apply(my_CAL[1:9,],1,mean)
b<-m-rep(theta0,9)
v<-apply(my_CAL[1:9,],1,var)
se<-sqrt(v)
mse<-v+b^{2}
rmse<-sqrt(mse)
rmse
Res_CAL<-cbind(m,b,se,rmse)
Res_CAL
CAL_CI_COV=apply(my_CAL[10:18,],1,mean)
CAL_CI_LEN=apply(my_CAL[19:27,],1,mean)
CAL_CI_COV
CAL_CI_LEN
load("Chunk1.RData")
load("Chunk2.RData")
load("Chunk3.RData")
load("Chunk4.RData")
load("Chunk5.RData")
my_CAL=cbind(my_CAL_chunk1,my_CAL_chunk2,my_CAL_chunk3,my_CAL_chunk4,
my_CAL_chunk5)
#,my_CAL_chunk6,my_CAL_chunk7,my_CAL_chunk8,
#my_CAL_chunk9,my_CAL_chunk10)
m<-apply(my_CAL[1:9,],1,mean)
b<-m-rep(theta0,9)
v<-apply(my_CAL[1:9,],1,var)
se<-sqrt(v)
mse<-v+b^{2}
rmse<-sqrt(mse)
rmse
Res_CAL<-cbind(m,b,se,rmse)
Res_CAL
CAL_CI_COV=apply(my_CAL[10:18,],1,mean)
CAL_CI_LEN=apply(my_CAL[19:27,],1,mean)
CAL_CI_COV
CAL_CI_LEN
my_PROJ=cbind(my_PROJ_chunk1,my_PROJ_chunk2,my_PROJ_chunk3,my_PROJ_chunk4,
my_PROJ_chunk5)
#,my_PROJ_chunk6,my_PROJ_chunk7,my_PROJ_chunk8,
#my_PROJ_chunk9,my_PROJ_chunk10)
m<-apply(my_PROJ[1:9,],1,mean)
b<-m-rep(theta0,9)
v<-apply(my_PROJ[1:9,],1,var)
se<-sqrt(v)
mse<-v+b^{2}
rmse<-sqrt(mse)
rmse
Res_PROJ<-cbind(m,b,se,rmse)
Res_PROJ
PROJ_CI_COV=apply(my_PROJ[10:18,],1,mean)
PROJ_CI_LEN=apply(my_PROJ[19:27,],1,mean)
PROJ_CI_COV
PROJ_CI_LEN
library(raster)
autoc <- raster(nrows = 10, ncols = 10, xmn = -115, xmx = -75, ymn = 20, ymx = 60)
autoc[] <- runif(100, 0.01,10)/10
autoc <- disaggregate(autoc,100, "bilinear")
load("NOAM.RData")
autoc=crop(autoc,NOAM)
setwd("C:/Users/BGOCHANOUR/Desktop")
library(raster)
autoc <- raster(nrows = 10, ncols = 10, xmn = -115, xmx = -75, ymn = 20, ymx = 60)
autoc[] <- runif(100, 0.01,10)/10
autoc <- disaggregate(autoc,100, "bilinear")
load("NOAM.RData")
autoc=crop(autoc,NOAM)
setwd("~/")
library(raster)
autoc <- raster(nrows = 10, ncols = 10, xmn = -115, xmx = -75, ymn = 20, ymx = 60)
autoc[] <- runif(100, 0.01,10)/10
autoc <- disaggregate(autoc,100, "bilinear")
load("NOAM.RData")
autoc=crop(autoc,NOAM)
plot(autoc)
autoc=crop(autoc,NOAM)
extent(NOAM)
?extent
plot(autoc)
NOAM=crop(NOAM,my_bounds)
my_bounds=extent(-178.2,6.6,-49.0,83.3)
NOAM=crop(NOAM,my_bounds)
autoc=crop(autoc,NOAM)
plot(autoc)
plot(NOAM,add=TRUE)
autoc=crop(autoc,NOAM)
autoc <- raster(nrows = 10, ncols = 10, xmn = -115, xmx = -75, ymn = 20, ymx = 60)
autoc[] <- runif(100, 0.01,10)/10
autoc <- disaggregate(autoc,100, "bilinear")
autoc=crop(autoc,NOAM)
plot(autoc)
autoc=mask(autoC,NOAM)
autoc=mask(autoc,NOAM)
autoc=crop(autoc,NOAM)
library(raster)
autoc <- raster(nrows = 10, ncols = 10, xmn = -115, xmx = -75, ymn = 20, ymx = 60)
autoc[] <- runif(10, 0.01,10)/10
autoc <- disaggregate(autoc,100, "bilinear")
autoc=mask(autoc,NOAM)
autoc=crop(autoc,NOAM)
plot(autoc)
plot(NOAM)
autoc <- raster(nrows = 10, ncols = 10, xmn = -115, xmx = -75, ymn = 20, ymx = 60)
autoc[] <- runif(10, 0.01,10)/10
autoc <- disaggregate(autoc,10, "bilinear")
autoc=crop(autoc,NOAM)
autoc=mask(autoc,NOAM)
plot(autoc)
autoc <- raster(nrows = 10, ncols = 10, xmn = -115, xmx = -75, ymn = 20, ymx = 60)
autoc[] <- runif(100, 0.01,10)/10
autoc <- disaggregate(autoc,10, "bilinear")
plot(autoc)
autoc <- raster(nrows = 10, ncols = 10, xmn = -115, xmx = -75, ymn = 20, ymx = 60)
autoc[] <- runif(10, 0.01,10)/10
autoc <- disaggregate(autoc,50, "bilinear")
plot(autoc)
autoc <- raster(nrows = 10, ncols = 10, xmn = -115, xmx = -75, ymn = 20, ymx = 60)
autoc[] <- runif(10, 0.01,10)/10
autoc <- disaggregate(autoc,100, "bilinear")
plot(autoc)
autoc <- raster(nrows = 10, ncols = 10, xmn = -115, xmx = -75, ymn = 20, ymx = 60)
autoc[] <- runif(100, 0.01,10)/10
autoc <- disaggregate(autoc,100, "bilinear")
plot(autoc)
autoc=crop(autoc,NOAM)
autoc=mask(autoc,NOAM)
plot(autoc)
autoc <- raster(nrows = 10, ncols = 10, xmn = -115, xmx = -75, ymn = 20, ymx = 60)
autoc[] <- runif(100, 0.01,10)/10
autoc <- disaggregate(autoc,50, "bilinear")
plot(autoc)
autoc <- raster(nrows = 10, ncols = 10, xmn = -115, xmx = -75, ymn = 20, ymx = 60)
autoc[] <- runif(100, 0.01,10)/10
autoc <- disaggregate(autoc,20, "bilinear")
plot(autoc)
autoc=mask(autoc,NOAM)
autoc=crop(autoc,NOAM)
plot(autoc)
plot(NOAM,add=TRUE)
autoc <- raster(nrows = 10, ncols = 10, xmn = -130, xmx = -55, ymn = 20, ymx = 60)
autoc[] <- runif(100, 0.01,10)/10
autoc <- disaggregate(autoc,20, "bilinear")
plot(autoc)
autoc=mask(autoc,NOAM)
autoc=crop(autoc,NOAM)
plot(autoc)
plot(NOAM,add=TRUE)
autoc <- raster(nrows = 10, ncols = 10, xmn = -135, xmx = -55, ymn = 20, ymx = 60)
autoc[] <- runif(100, 0.01,10)/10
autoc <- disaggregate(autoc,20, "bilinear")
plot(autoc)
autoc=mask(autoc,NOAM)
autoc=crop(autoc,NOAM)
plot(autoc)
plot(NOAM,add=TRUE)
ndvi_raster=autoc
# Run function
EX2 <- moveSIM(
replicates = 5, days = 10, env_rast = ndvi_raster, search_radius = 550,
sigma = .1, dest_x = -108.6, dest_y = 26.2, mot_x = .8, mot_y = .8,
modeled_species = pop1, optimum = .6, n_failures = 5, fail_thresh = .40,
direction = "S", write_results = TRUE, single_rast = TRUE, mortality = T
)
pop1 <- as.species(
x = -98.7, y = 34.7, morphpar1 = 15, morphpar1mean = 16, morphpar1sd = 2,
morphpar1sign = "Pos", morphpar2 = 19, morphpar2mean = 18, morphpar2sd = 1,
morphpar2sign = "Pos")
library(abmR)
pop1 <- as.species(
x = -98.7, y = 34.7, morphpar1 = 15, morphpar1mean = 16, morphpar1sd = 2,
morphpar1sign = "Pos", morphpar2 = 19, morphpar2mean = 18, morphpar2sd = 1,
morphpar2sign = "Pos")
EX2 <- moveSIM(
replicates = 5, days = 10, env_rast = ndvi_raster, search_radius = 550,
sigma = .1, dest_x = -108.6, dest_y = 26.2, mot_x = .8, mot_y = .8,
modeled_species = pop1, optimum = .6, n_failures = 5, fail_thresh = .40,
direction = "S", write_results = TRUE, single_rast = TRUE, mortality = T
)
moveVIZ(EX2)
EX2 <- moveSIM(
replicates = 5, days = 5, env_rast = ndvi_raster, search_radius = 250,
sigma = .1, dest_x = -108.6, dest_y = 26.2, mot_x = .8, mot_y = .8,
modeled_species = pop1, optimum = .6, n_failures = 5, fail_thresh = .40,
direction = "S", write_results = TRUE, single_rast = TRUE, mortality = T
)
EX2 <- moveSIM(
replicates = 5, days = 5, env_rast = ndvi_raster, search_radius = 200,
sigma = .1, dest_x = -108.6, dest_y = 26.2, mot_x = .8, mot_y = .8,
modeled_species = pop1, optimum = .6, n_failures = 5, fail_thresh = .40,
direction = "S", write_results = TRUE, single_rast = TRUE, mortality = T
)
moveVIZ(EX2)
EX2 <- moveSIM(
replicates = 5, days = 10, env_rast = ndvi_raster, search_radius = 200,
sigma = .1, dest_x = -108.6, dest_y = 26.2, mot_x = .8, mot_y = .8,
modeled_species = pop1, optimum = .6, n_failures = 5, fail_thresh = .40,
direction = "S", write_results = TRUE, single_rast = TRUE, mortality = T
)
moveVIZ(EX2)
EX2 <- moveSIM(
replicates = 5, days = 10, env_rast = ndvi_raster, search_radius = 300,
sigma = .1, dest_x = -108.6, dest_y = 26.2, mot_x = .8, mot_y = .8,
modeled_species = pop1, optimum = .6, n_failures = 5, fail_thresh = .40,
direction = "S", write_results = TRUE, single_rast = TRUE, mortality = T
)
moveVIZ(EX2)
plot(ndvi_raster)
save(autoc,file="ex_raster.RData")
library(abmR)
ex_raster=autoc
save(ex_raster,file="ex_raster.RData")
library(abmR)
getwd()
library(abmR)
plot(NOAM,add=TRUE)
plot(ex_raster)
plot(NOAM,add=TRUE)
plot(ex_raster)
plot(NOAM,add=TRUE)
library(abmR)
setwd("~/Multiply Robust Bayesian Paper/R Code/Real Data")
########################
# NHANES DATA ANALYSIS #
# Ben Gochanour        #
# Last Updated 20 July #
# I. Import Functions/Data and Specify Models #
###############################################
source("function.R")
source("function_2_realdata.R")
load("dat")
load("bootdata")
my_correct_reg=ry~rx1+rx2+rx3+rx4+rx5
my_bad_reg=ry~rx1*rx3+rx1*rx2+rx6+rx7+rx8
my_correct_prop=r~x1+x2+x3+x4+x5
my_bad_prop=r~x1*x3+x1*x2+x6+x7+x8
# For the calibration and projection functions
my_correct_prop0=(1-r)~x1+x2+x3+x4+x5
my_bad_prop0=(1-r)~x1*x3+x1*x2+x6+x7+x8
# II. Run the Estimators #
###############################################
######## 1. Assuming MCAR ######
my_MCAR<-lapply(bootdata,fMCAR)
my_MCAR<-unlist(my_MCAR)
m<-mean(my_MCAR)
v<-var(my_MCAR)
se<-sqrt(v)
CI_lo=m-1.96*se
CI_hi=m+1.96*se
Res_MCAR<-cbind(
Res_MCAR<-cbind(m,CI_lo,CI_hi)
Res_MCAR
######## 1. Assuming MCAR ######
my_MCAR<-lapply(bootdata,fMCAR)
my_MCAR<-unlist(my_MCAR)
m<-mean(my_MCAR)
v<-var(my_MCAR)
se<-sqrt(v)
CI_lo=m-1.96*se
CI_hi=m+1.96*se
Res_MCAR<-cbind(m,CI_lo,CI_hi)
Res_MCAR
x=seq(-4,4,length=200)
y=1/sqrt(2*pi)*exp(-x^2/2)
plot(x,y,type="l",lwd=2,col="red"
plot(x,y,type="l",lwd=2,col="red")
plot(x,y,type="l",lwd=2,col="red")
x=seq(-4,4,length=500)
y=1/sqrt(2*pi)*exp(-x^2/2)
plot(x,y,type="l",lwd=2,col="black")
x=seq(-4,4,length=1500)
y=1/sqrt(2*pi)*exp(-x^2/2)
plot(x,y,type="l",lwd=2,col="black")
x=seq(-4,4,length=5000)
y=1/sqrt(2*pi)*exp(-x^2/2)
plot(x,y,type="l",lwd=2,col="black")
library(ggplot2)
?tm_raster
??tm_raster
?gstat
?idw
